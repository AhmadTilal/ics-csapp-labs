# Name:丁卓成 ID:5120379064

# Execution begins at address 0
        .pos 0
init:   irmovl  Stack, %esp     # Set up stack pointer
        rrmovl  %esp,%ebp       # Set up base pointer
        irmovl  $3,%edx
        pushl   %edx
        irmovl  dest,%edx
        pushl   %edx
        irmovl  src,%edx
        pushl   %edx
        call    copy_block      # Execute main program
        halt                    # Terminate program

.align 4
# Source block
src:
        .long 0x00a
        .long 0x0b0
        .long 0xc00

# Destination block
dest:
        .long 0x111
        .long 0x222
        .long 0x333

            # int copy_block(int *src, int *dest, int len)
copy_block: pushl   %ebp
            rrmovl  %esp,%ebp
            mrmovl  8(%ebp),%ebx    # ebx = src
            mrmovl  12(%ebp),%ecx   # ecx = dest
            mrmovl  16(%ebp),%edx   # edx = len
            andl    %edx,%edx       # Set condition codes
            je      End
Loop:       mrmovl  (%ebx),%esi     # val = *src
            rmmovl  %esi,(%ecx)     # *dest = val
            xorl    %esi,%eax       # result ^= val
            irmovl  $-1,%edi
            addl    %edi,%edx       # len--
            irmovl  $4,%edi
            addl    %edi,%ebx       # src++
            addl    %edi,%ecx       # dest++
            andl    %edx,%edx       # Set condition codes
            jne     Loop
End:        rrmovl  %eax,%esi       # make sure esi = 0xcba at last
            nop                     # make sure stop in 52 steps
            rrmovl  %ebp,%esp
            popl    %ebp
            ret

# The stack starts here and grows to lower addresses
        .pos 0x100
Stack:
