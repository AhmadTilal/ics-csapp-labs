# Name:丁卓成 ID:5120379064

# Execution begins at address 0
        .pos 0
init:   irmovl  Stack, %esp     # Set up stack pointer
        rrmovl  %esp,%ebp       # Set up base pointer
        irmovl  ele1,%edx
        pushl   %edx
        call    rsum_list       # Execute main program
        halt                    # Terminate program


# Sample linked list
        .align 4
ele1:   .long 0x00a
        .long ele2
ele2:   .long 0x0b0
        .long ele3
ele3:   .long 0xc00
        .long 0

            # int rsum_list(list_ptr ls)
rsum_list:  pushl   %ebp
            rrmovl  %esp,%ebp
            pushl   %ebx            # callee save ebx
            mrmovl  8(%ebp),%edx    # edx = ls
            andl    %edx,%edx       # Set condition codes
            mrmovl  (%edx),%ebx     # val = ls->val
            je      End
            mrmovl  4(%edx),%edx    # ls = ls->next
            pushl   %edx
            call    rsum_list       # rest = rsum_list(ls)
            addl    %ebx,%eax       # return val + rest
            popl    %edx
End:        popl    %ebx
            mrmovl  8(%ebp),%edx    # make sure edx = 0x18 at last
            popl    %ebp
            ret

# The stack starts here and grows to lower addresses
        .pos 0x100
Stack:
